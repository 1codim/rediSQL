name: Rust

on: [push]

jobs:
  build-debug:
    runs-on: ubuntu-18.04

    steps:
    - uses: actions/checkout@v1
    - name: Build
      run: cargo build --verbose
    - name: Run tests
      run: cargo test --verbose

  build-release:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - name: Build
        run: cargo build --release
      - name: Rename artifact
        run: |
          cp target/release/libredis_sql.so target/release/redisql.so
      - name: Upload resulting build
        uses: actions/upload-artifact@v1
        with:
          name: redisql.so
          path: target/release/

  build-redis-4:
    runs-on: ubuntu-18.04
    steps:
      - name: Cache redis-4
        id: cache-redis-4
        uses: actions/cache@v1
        with:
          path: redis-4
          key: redis-4
      - name: Build redis-4
        if: steps.cache-redis-4.outputs.cache-hit != 'true'
        run: |
          wget http://download.redis.io/releases/redis-4.0.14.tar.gz ;
          echo "pwd: "
          pwd
          echo "ls"
          ls
          tar xzf ./redis-4.0.14.tar.gz ;
          echo "ls - after tar"
          ls
          mkdir redis-4 ;
          mv ./redis-4.0.17 redis-4/ ;
          cd redis-4
          make

  test-redis4:
    runs-on: ubuntu-18.04
    needs: [build-release, build-redis-4]
    steps:
      - uses: actions/checkout@v2
      - name: Download build
        uses: actions/download-artifact@v1
        with:
          name: redisql.so
          path: build
      - name: Setup Python for integration tests
        uses: actions/setup-python@v1.1.1
        with:
          python-version: 3.8
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r test/correctness/requirements.txt
      - name: Cache redis-4
        id: cache-redis-4
        uses: actions/cache@v1
        with:
          path: redis-4
          key: redis-4
      - name: Build redis-4
        if: steps.cache-redis-4.outputs.cache-hit != 'true'
        run: |
          wget -O redis.tar.gz http://download.redis.io/releases/redis-4.0.14.tar.gz
          tar xzf redis.tar.gz
          mv redis-4.0.17 redis-4
          cd redis-4
          make
      - name: Run the tests
        run: python3 test/correctness/test_v1.py
        env:
          REDIS_MODULE_PATH: build/redisql.so
          REDIS_PATH: redis-4/src/redis-server

  test-redis5:
    runs-on: ubuntu-18.04
    needs: build-release
    steps:
      - uses: actions/checkout@v2
      - name: Download build
        uses: actions/download-artifact@v1
        with:
          name: redisql.so
          path: build
      - name: Setup Python for integration tests
        uses: actions/setup-python@v1.1.1
        with:
          python-version: 3.8
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r test/correctness/requirements.txt
      - name: Cache redis-5
        id: cache-redis-5
        uses: actions/cache@v1
        with:
          path: redis-5
          key: redis-5
      - name: Build redis-5
        if: steps.cache-redis-5.outputs.cache-hit != 'true'
        run: |
          wget http://download.redis.io/releases/redis-5.0.7.tar.gz
          tar xzf redis-5.0.7.tar.gz
          mv redis-5.0.7 redis-5
          cd redis-5
          make
      - name: Run the tests
        run: python3 test/correctness/test_v1.py
        env:
          REDIS_MODULE_PATH: build/redisql.so
          REDIS_PATH: redis-5/src/redis-server
